Step 1 Start
Step 2 Display menu
Step 3 Read choice
Step 4 If choice is 1, go to fcfs()
Step 5 If choice is 2, go to lru()
Step 6 If choice is 3, go to lfu()
Step 7 If choice is less than or equal to 3, go to 
	 step 3
Step 8 Stop

fcfs()

Step 1 Start
Step 2 Data n, np and pg are taken to do operations
Step 3 Set size sz and pagefault pgflt as 0
Step 4 Insert first page into frame and set i = 1
Step 5 Repeat until all pages are covered
Step 5.1 Check whether (i-1)th frame contains ith 
	   page pg[i] is present,
Step 5.1.1 If true, copy (i-1)th frame to ith
Step 5.2 Else,
Step 5.2.1 Increment pgflt by 1
Step 5.2.2 Check sz < n
Step 5.2.2.1 If true,
Step 5.2.2.1.1 Copy previous frame to new frame
Step 5.2.2.1.2 Add new page to the end
Step 5.2.2.1.3 Set pt = 0
Step 5.2.2.2 Else,
Step 5.2.2.2.1 Copy previous frame to new frame
Step 5.2.2.2.2 Copy page to position pt of frame
Step 5.2.2.2.3 Set pt as (pt+1)%n
Step 5.2.3 If sz< n , increment sz by 1
Step 5.3 Increment i by 1
Step 6 Display all frames
Step 7 Display pagefault pgflt
Step 8 Stop 

lru()

Step 1 Start
Step 2 Data n, np and pg are extracted to do operations
Step 3 Set size sz and pagefault pgflt as 0
Step 4 Insert first page into frame and set i = 1
Step 5 Repeat until all pages are covered
Step 5.1 Check whether (i-1)th frame contains ith 
	   page pg[i] is present,
Step 5.1.1 If true, copy (i-1)th frame to ith
Step 5.2 Else,
Step 5.2.1 Increment pgflt by 1
Step 5.2.2 Check sz < n
Step 5.2.2.1 If true,
Step 5.2.2.1.1 Copy previous frame to new frame
Step 5.2.2.1.2 Add new page to the end
Step 5.2.2.1.3 Set pt = 0
Step 5.2.2.2 Else,
Step 5.2.2.2.1 Set k = 0
Step 5.2.2.2.2 Copy pg[fn-1] to rused array indexed 
		   with k
Step 5.2.2.2.3 Increment k by 1 and set i = 0
Step 5.2.2.2.4 Repeat until i >=0
Step 5.2.2.2.4.1 Set flag = 1
Step 5.2.2.2.4.2 Check if pg[i] is in rused array
Step 5.2.2.2.4.2.1 If true , Set flag = 0
Step 5.2.2.2.4.3 Check if flag is 1,
Step 5.2.2.2.4.3.1 Copy pg[i] to rused[k] and 
			 increment k by 1
Step 5.2.2.2.4.4 If k=n, break loop
Step 5.2.2.2.4.5 Decrement i by 1
Step 5.2.2.2.5 Copy previous frame to new
Step 5.2.2.2.6 Copy page to frame where value is 
		   rused[n-1] 
Step 5.2.3 If sz< n , increment sz by 1
Step 5.3 Increment i by 1
Step 6 Display all frames
Step 7 Display pagefault pgflt
Step 8 Stop 

lfu()

Step 1 Start
Step 2 Data n, np and pg are extracted to do operations
Step 3 Set size sz and pagefault pgflt as 0
Step 4 Insert first page into frame and set i = 1
Step 5 Repeat until all pages are covered
Step 5.1 Check whether (i-1)th frame contains ith 
	   page pg[i] is present,
Step 5.1.1 If true, copy (i-1)th frame to ith
Step 5.2 Else,
Step 5.2.1 Increment pgflt by 1
Step 5.2.2 Check sz < n
Step 5.2.2.1 If true,
Step 5.2.2.1.1 Copy previous frame to new frame
Step 5.2.2.1.2 Add new page to the end
Step 5.2.2.1.3 Set pt = 0
Step 5.2.2.2 Else,
Step 5.2.2.2.1 Set k = 0
Step 5.2.2.2.2 Copy pg[fn-1] to rused array indexed 
		   with k
Step 5.2.2.2.3 Increment k by 1 and set i = 0
Step 5.2.2.2.4 Repeat until i >=0
Step 5.2.2.2.4.1 Set flag = 1
Step 5.2.2.2.4.2 Check if pg[i] is in rused array
Step 5.2.2.2.4.2.1 If true , Set flag = 0
Step 5.2.2.2.4.3 Check if flag is 1,
Step 5.2.2.2.4.3.1 Copy pg[i] to rused[k] and 
			 increment k by 1
Step 5.2.2.2.4.4 If k=n, break loop
Step 5.2.2.2.4.5 Decrement i by 1
Step 5.2.2.2.5 Copy previous frame to new
Step 5.2.2.2.6 Copy page to frame where value is 
		   rused[n-1] 
Step 5.2.3 If sz< n , increment sz by 1
Step 5.3 Increment i by 1
Step 6 Display all frames
Step 7 Display pagefault pgflt
Step 8 Stop 

